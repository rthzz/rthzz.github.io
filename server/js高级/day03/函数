day03 Function 函数 ***
  JS数据类型
    1. 基本数据类型:
        number boolean string null undefined 
    2. 引用类型
        Function Array Object Date ... 
  区别:
    基本: 基本数据类型赋值时,直接将变量复制一份
          给新变量
    引用: 引用类型赋值时,是将对象的地址复制一份
          给新变量 

1. 函数: 
   函数名其实是引用函数对象的变量, 实际上
         也是指向函数对象的指针.
   函数其实就是我们所说的方法,定义一个方法,其实就是定义一个函数, 调用一个方法其实
   就是调用一个函数, 它的所用就是封装特定的代
   码段. 

2. 函数的创建     推荐第一种
   2.1 声明式: function fun(arg1..){ return ...}
   2.2 直接量: var fun = function(arg1..){ ... }
   2.3 new :   var fun = new 
                 Function('arg1','return ...'); 

3. 全局变量和局部变量
  1. 直接在当前脚本的全局var的,都是全局
  2. 在函数内部var的,属于局部变量,参数也是局部
     变量
  3. 函数内部有,就用自己的,内部没有,就去向上沿着父级找,一直找到全局结束
     找,找到就用全局的.   
  4. 全局变量和局部变量
  全局变量和局部变量都会**声明提前**,提前到当前作用域的最顶端,但是赋值留在原地. 
 ** 声明式创建的函数会被整体提前到当前作用域的最顶端.

5. 重载 overload 
  1. 相同函数名,不同参数列表的多个函数,在调用时,根据传入的参数的不同,自动选择不同的函数执行.
  arguments
  2. JS 中不支持重载,不可能出现同名函数. 但是, 函数有一个属性 arguments. 它可以模拟重载

6. arguments 类数组对象 [ ] -> 集合
    作用: 自动接收传入函数的所有参数.他是一个
          类数组对象(集合);
   特点: 1. 可以用 [i] 下标去访问每个元素
         2. 有  length 属性
         3. 可以使用 for 循环遍历
         4. 但是它不是数组,不能使用数组的API.

7. 匿名函数
    匿名函数又称立即执行函数,创建函数时,不指定函数的名称.
    自调: 创建一个匿名函数,立刻调用,调用完,立刻释放.(节约内存) 定义在哪里,就在哪里执行,不提前.

8. 回调函数 callback
    定义: 将一个函数作为参数传给另一个参数,
          由另一个函数决定在需要时调用.

   为什么需要回调函数?
     1. JS 是单线程的. JS引擎只能一件事一件事的执行. 同步执行. 有一个排队的过程.等待着被触发执行.
     1 - 10h 2 - 10s 3 - 10s
     2. 回调函数就是JS异步机制的一种实现

9. Error 对象 
   9.1什么是错误: 导致程序无法继续运行的异常状态
   9.2 JS 中一旦发现错误, 就会自动的创建一个 
       Error对象.
    错误的类型: 
     SyntaxError : 语法错误
     ReferenecError: 找不到变量,引用错误 
     TypeError: 类型错误,错误的调用对象中的方法
     RangeError: 范围错误,参数超过范围 
     EvalError: eval() 调用eval方法出错 
     URLError: 地址错误 

   9.3 错误处理: 在程序发生错误时,保证程序不退出或正常退出.
    错误处理语法: 
      try{
        // 正常的代码段,可能会出错
      }catch(err){
        // 1. 一旦发生错误 err 就会保存错误信息
        // 2. 可以先调用者抛出错误信息
      }<finally{
        // 无论对错,都会执行的代码段
      }>  
   9.4 尽量优先使用 if..else..结构来判断已经预知的错误, 只有无法预知的错误才用 try...catch...  
   

