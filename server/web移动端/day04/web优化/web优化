web前端优化 -day06
二八原则 资源从服务器处理完成
  下发客户端到浏览器时间大概是整个过程的20%就是说服务器进行的优化空间不是很大,
  剩余80%的时间在前端.web优化主要在于前端的性能优化

  2.前端优化的第一个维度:
      关键渲染路径(crp):浏览器通过http协议发送页面请求,接收到服务器返回的数据(html,css.js)
      浏览器要将这些资源转换成看到的页面(像素组成).这个过程就叫关键渲染路径.
      优化关键渲染路径可以缩短页面的加载时间

  渲染步骤:
    1.构建DOM树-dom
    2.构建cssom树-css样式文档模型
    3.构建渲染树-RENDER-TREE
    4.布局     -layout 回流(reflow)
    5.绘制     -painting 重绘(repaint)

优化CRP.
html和css,js在被加载执行时,js会阻塞页面dom的生成
所以把js放在页面的最后,这样就不会阻塞dom

css放在顶部:优先渲染,link标签引入

img标签设置宽高,减少重绘时间

减少dom操作:体现编程水平
   前端框架 vaue react 虚拟dom方案可以解决dom的操作问题

利用事件冒泡:
   利用事件冒泡,在目标元素的父元素注册事件,节省dom节点引用开销

静态资源的优化:
   1 减少静态资源的加载时间,(html,css,js,图片..)文件
   静态资源的加载时间是前端性能最大的瓶颈(图片).
   2 减少http请求次数:
       css雪碧图 把多个小图标拼成一张图,css定位来获取
       css,js文件压缩.
          通过打包工具把多个css,js文件打包成一个并且进行压缩
          以此来减小文件个数和文件的大小(webpack/gulp)

   font-icon字体图标
        体验较好可以使用css样式,淘宝对icon的实践比较好

  图片base64编码传输
    将图片编译成一串字符串,用该字符串代替图片url,减少一次http请求

 图片延迟加载(懒加载)
  只要是减少首屏的加载时间,按需加载



  面试知识点(js)
    变量声明提前的问题
    闭包
    怎么理解函数的作用域
    this的指向问题
    面向对象的创建方式,继承的理解
    jquery的操作dom 的API
    基本的算法:冒泡排序,去重
    ajax的基本问题,get与post请求的区别?
    数组,栈和队列的问题
    模板引擎的原理
    http协议的问题,比如状态码分别代表什么意思?
      从用户输入url开始到显示页面这整个过程发生了什么
    谈谈web的存储方式有哪些?
    

